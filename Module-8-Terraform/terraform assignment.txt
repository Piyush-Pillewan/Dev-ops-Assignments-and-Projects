https://developer.hashicorp.com/terraform/cli/install/apt



assignment1
provider "aws" {
        region = "us-east-2"
        access_key = "AKIARZYTZU2OEDJLMASC"
        secret_key = "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"
}

resource "aws_instance" "assignment-1" {
        ami = "ami-0d5bf08bc8017c83b"
        instance_type = "t2.micro"
        key_name = "hrithik"
        tags = {
        Name = "assignment-1"
        }
}

-----------------------------------------
assignment2
provider "aws" {
        region = "us-east-2"
        access_key = "AKIARZYTZU2OEDJLMASC"
        secret_key = "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"
}
resource "aws_instance" "assignment-2" {
        ami = "ami-0d5bf08bc8017c83b"
        instance_type = "t2.micro"
        key_name = "hrithik"
        tags = {
        Name = "assignment-2"
        }
}
resource "aws_eip" "eip" {
  vpc = true
}
resource "aws_eip_association" "eip_assoc" {
  instance_id   = aws_instance.assignment-2.id
  allocation_id = aws_eip.eip.id
}




------------------------------------------
assignment3
provider "aws" {
        alias = "NV"
        region = "us-east-1"
        access_key = "AKIARZYTZU2OEDJLMASC"
        secret_key = "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"
}
provider "aws" {
        alias = "Ohio"
        region = "us-east-2"
        access_key = "AKIARZYTZU2OEDJLMASC"
        secret_key = "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"
}
resource "aws_instance" "assignment-3-1" {
        provider = aws.NV
        ami = "ami-0149b2da6ceec4bb0"
        instance_type = "t2.micro"
        tags = {
        Name = "hello-virginia"
        }
}
resource "aws_instance" "assignment-3-2" {
        provider = aws.Ohio
        ami = "ami-0d5bf08bc8017c83b"
        instance_type = "t2.micro"
        key_name = "hrithik"
        tags = {
        Name = "hello-ohio"
        }
}






--------------------------------------
assignment-4
provider "aws" {
        region = "us-east-2"
        access_key = "AKIARZYTZU2OEDJLMASC"
        secret_key = "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"
}

resource "aws_instance" "assignment-4" {
        ami = "ami-0d5bf08bc8017c83b"
        instance_type = "t2.micro"
        subnet_id = aws_subnet.assignment-4-subnet.id
        key_name = "hrithik"
        tags = {
        Name = "assignment-4"
        }
}

resource "aws_vpc" "assignment-4-vpc" {
        cidr_block = "10.10.0.0/16"
        tags = {
        Name = "assignment-4-vpc"
        }
}

resource "aws_subnet" "assignment-4-subnet" {
        vpc_id = aws_vpc.assignment-4-vpc.id
        cidr_block = "10.10.0.0/18"
        availability_zone = "us-east-2a"
        tags = {
        Name = "assignment-4-subnet"
        }
}
---------------------
assignment-5
provider "aws" {
        access_key = "AKIARZYTZU2OEDJLMASC"
        secret_key = "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"
        region = "us-east-2"
}

resource "aws_instance" "a5-instance" {
        ami = "ami-0d5bf08bc8017c83b"
        instance_type = "t2.micro"
        key_name = ""
        user_data = "${file("install-apache2.sh")}"
        tags = {
                Name = "a5-instance"
        }
}

output "IPv4" {
        value = aws_instance.a5-instance.public_ip
}



 nano install-apache2.sh
#!/bin/bash
sudo apt update -y
sudo apt install apache2 -y
sudo su
echo "Custom html page" > /var/www/html/index.html
-------------------------------------------------------------------------------------------------------------------------
case study

provider "aws" {
  region = "us-east-2"
  access_key = ""
  secret_key = ""
}

resource "aws_instance" "firstec2" {
  ami = "ami-0283a57753b18025b"
  instance_type = "t2.micro"
  user_data = <<-EOL
  #!/bin/bash -xe
  sudo apt-get update
  sudo apt-get install apache2
  EOL
  subnet_id = "${aws_subnet.first.id}"
  tags = {
      Name = "Terraform-casestudy"
          }
}
resource "aws_vpc" "main" {
  cidr_block = "172.31.0.0/16"
  enable_dns_support = "1"
  enable_dns_hostnames = "1"
 tags = {
      Name = "myfirstvpc"
          }

}

resource "aws_subnet" "first" {
  availability_zone = "us-east-2a"
  cidr_block = "172.31.0.0/16"
  map_public_ip_on_launch = "1"
  vpc_id = "${aws_vpc.main.id}"
  tags = {
      Name = "myfirstsubnet"
          }
}
resource "aws_default_security_group" "default_myfirst" {
  ingress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  vpc_id = "${aws_vpc.main.id}"
  tags = {
      Name = "myfirstsecuritygroup"
          }
}
resource "aws_internet_gateway" "internet" {
  vpc_id = "${aws_vpc.main.id}"
  tags = {
      Name = "myinternetgateway"
          }

}


resource "aws_route" "internet" {
  route_table_id            = "${aws_vpc.main.default_route_table_id}"
  destination_cidr_block    = "0.0.0.0/0"
  gateway_id = "${aws_internet_gateway.internet.id}"

}

resource "aws_route_table_association" "a" {
  subnet_id      = "${aws_subnet.first.id}"
  route_table_id = "${aws_vpc.main.default_route_table_id}"
}
resource "aws_network_interface" "first" {
  subnet_id = "${aws_subnet.first.id}"
  tags = {
      Name = "mynetworkinterface"
          }

}

resource "aws_network_interface_attachment" "connection" {
  instance_id          = "${aws_instance.firstec2.id}"
  network_interface_id = "${aws_network_interface.first.id}"
  device_index         = 1
}

output "IPs" {
  value = "Terraform-casestudy -  ${aws_instance.firstec2.public_ip}"
}



